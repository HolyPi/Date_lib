!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).dateLib=e()}(this,(function(){"use strict";const{months:t,mons:e,days:s,dys:n}=require("./utils");class r{constructor(...t){this._date=new Date(...t)}get year(){return this._date.getFullYear()}get yr(){return this._date.getFullYear()%100}get month(){return t[this._date.getMonth()]}get mon(){return e[this._date.getMonth()]}get day(){return s[this._date.getDay()]}get dy(){return n[this._date.getDay()]}get date(){return this._date.getDate()}get hours(){return this._date.getHours()}get mins(){return this._date.getMinutes()}get secs(){return this._date.getSeconds()}format(t="M D Y"){const e={Y:this.year,y:this.yr,M:this.month,m:this.mon,D:this._date.getDate(),d:this.date,H:this._date.getHours(),h:this._date.getHours(),I:this._date.getMinutes(),i:this.mins,S:this._date.getSeconds(),s:this.secs};let s="";for(let n=0;n<t.length;n++)void 0===e[t[n]]?s+=t[n]:s+=e[t[n]];return s}when(){const t=new r,e=this.year-t.year,s=this.date.getMonth()-t.date.getMonth()+12*e,n=this.date-t.date;return s>11?`${e} year(s) from now`:s>0?`${s} month(s) from now`:s<0?`${s} month(s) ago`:s>0?`${n} day(s) ago`:s<0?`${n} days from now`:"today"}}return r}));
